


CodeMirror.defineSimpleMode("mymode", {
  // The start state contains the rules that are intially used
  start: [

    {regex: /"(?:[^\\]|\\.)*?(?:"|$)|'(?:[^\\]|\\.)*?(?:'|$)|`(?:[^\\]|\\.)*?(?:`|$)/, token: "string"},

    {regex: /ΤΕΛΟΣ_ΠΡΟΓΡΑΜΜΑΤΟΣ|ΤΕΛΟΣ_ΔΙΑΔΙΚΑΣΙΑΣ|ΤΕΛΟΣ_ΕΠΑΝΑΛΗΨΗΣ|ΤΕΛΟΣ_ΣΥΝΑΡΤΗΣΗΣ|ΑΡΧΗ_ΕΠΑΝΑΛΗΨΗΣ|ΤΕΛΟΣ_ΕΠΙΛΟΓΩΝ|ΜΕΧΡΙΣ_ΟΤΟΥ|ΔΙΑΔΙΚΑΣΙΑ|ΑΛΛΙΩΣ_ΑΝ|ΠΕΡΙΠΤΩΣΗ|ΕΠΑΝΑΛΑΒΕ|ΠΡΟΓΡΑΜΜΑ|ΣΥΝΑΡΤΗΣΗ|ΤΕΛΟΣ_ΑΝ|ΕΠΙΛΕΞΕ|ΜΕ ΒΗΜΑ|ΑΛΛΙΩΣ|ΜΕΧΡΙ|ΤΟΤΕ|ΑΡΧΗ|ΟΣΟ|ΓΙΑ|ΑΠΟ|ΑΝ/, token: "keyword"},

    {regex: /ΑΛΗΘΗΣ|Αληθής|Αληθης|αληθής|αληθης|ΨΕΘΔΗΣ|Ψευδής|Ψευδης|ψευδής|ψευδης/, token: "atom"},

 //   {regex: /0x[a-f\d]+|[-+]?(?:\.\d+|\d+\.?\d*)(?:e[-+]?\d+)?/i,  token: "number"},
   	{regex: /\d+\.\d+|[^Α-Ωα-ωA-Za-z_άέήίόύώΆΈΉΊΌΎΏς]\d+/,  token: "number"},
    {regex: /[:+-/*<>=]|KAI|και|H|η|ή|OXI|οχι|όχι|<>|>=|<=|<-/, token: "operator"},
	{regex: /[\[\]]/, token: "bracket"},
	{regex: /ΜΕΤΑΒΛΗΤΕΣ|ΣΤΑΘΕΡΕΣ/, token:"variable-2"},
	{regex: /ΠΡΑΓΜΑΤΙΚΗ|ΠΡΑΓΜΑΤΙΚΕΣ|ΑΚΕΡΑΙΑ|ΑΚΕΡΑΙΕΣ|ΛΟΓΙΚΗ|ΛΟΓΙΚΕΣ|ΧΑΡΑΚΤΗΡΑ|ΧΑΡΑΚΤΗΡΕΣ/, token:"variable-3"},
	{regex: /!(.)*$/, token:"comment"},
	{regex: /ΚΑΛΕΣΕ|ΓΡΑΨΕ|ΔΙΑΒΑΣΕ/, token:"variable"},
	

  ]
});
